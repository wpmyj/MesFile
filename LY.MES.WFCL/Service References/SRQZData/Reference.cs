//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LY.MES.WFCL.SRQZData {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CustomFaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sj_line", Namespace="http://schemas.datacontract.org/2004/07/LY.MES.Model.VModel")]
    [System.SerializableAttribute()]
    public partial class sj_line : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int fweightusedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int jihaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string namesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paichanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string qkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int serialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string shengchanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal weightAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal weightBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int fweightused {
            get {
                return this.fweightusedField;
            }
            set {
                if ((this.fweightusedField.Equals(value) != true)) {
                    this.fweightusedField = value;
                    this.RaisePropertyChanged("fweightused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int jihao {
            get {
                return this.jihaoField;
            }
            set {
                if ((this.jihaoField.Equals(value) != true)) {
                    this.jihaoField = value;
                    this.RaisePropertyChanged("jihao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int line {
            get {
                return this.lineField;
            }
            set {
                if ((this.lineField.Equals(value) != true)) {
                    this.lineField = value;
                    this.RaisePropertyChanged("line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string names {
            get {
                return this.namesField;
            }
            set {
                if ((object.ReferenceEquals(this.namesField, value) != true)) {
                    this.namesField = value;
                    this.RaisePropertyChanged("names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string paichan {
            get {
                return this.paichanField;
            }
            set {
                if ((object.ReferenceEquals(this.paichanField, value) != true)) {
                    this.paichanField = value;
                    this.RaisePropertyChanged("paichan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string qk {
            get {
                return this.qkField;
            }
            set {
                if ((object.ReferenceEquals(this.qkField, value) != true)) {
                    this.qkField = value;
                    this.RaisePropertyChanged("qk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int serial {
            get {
                return this.serialField;
            }
            set {
                if ((this.serialField.Equals(value) != true)) {
                    this.serialField = value;
                    this.RaisePropertyChanged("serial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string shengchan {
            get {
                return this.shengchanField;
            }
            set {
                if ((object.ReferenceEquals(this.shengchanField, value) != true)) {
                    this.shengchanField = value;
                    this.RaisePropertyChanged("shengchan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeA {
            get {
                return this.timeAField;
            }
            set {
                if ((this.timeAField.Equals(value) != true)) {
                    this.timeAField = value;
                    this.RaisePropertyChanged("timeA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeB {
            get {
                return this.timeBField;
            }
            set {
                if ((this.timeBField.Equals(value) != true)) {
                    this.timeBField = value;
                    this.RaisePropertyChanged("timeB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int types {
            get {
                return this.typesField;
            }
            set {
                if ((this.typesField.Equals(value) != true)) {
                    this.typesField = value;
                    this.RaisePropertyChanged("types");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal weightA {
            get {
                return this.weightAField;
            }
            set {
                if ((this.weightAField.Equals(value) != true)) {
                    this.weightAField = value;
                    this.RaisePropertyChanged("weightA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal weightB {
            get {
                return this.weightBField;
            }
            set {
                if ((this.weightBField.Equals(value) != true)) {
                    this.weightBField = value;
                    this.RaisePropertyChanged("weightB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRQZData.IQZDataService")]
    public interface IQZDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQualityInspector", ReplyAction="http://tempuri.org/IQZDataService/GetQualityInspectorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQualityInspectorCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQualityInspector(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQualityInspector", ReplyAction="http://tempuri.org/IQZDataService/GetQualityInspectorResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQualityInspectorAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetOrderSchData", ReplyAction="http://tempuri.org/IQZDataService/GetOrderSchDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetOrderSchDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRQZData.GetOrderSchDataResponse GetOrderSchData(LY.MES.WFCL.SRQZData.GetOrderSchDataRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetOrderSchData", ReplyAction="http://tempuri.org/IQZDataService/GetOrderSchDataResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRQZData.GetOrderSchDataResponse> GetOrderSchDataAsync(LY.MES.WFCL.SRQZData.GetOrderSchDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetOrderSchData1", ReplyAction="http://tempuri.org/IQZDataService/GetOrderSchData1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetOrderSchData1CustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRQZData.GetOrderSchData1Response GetOrderSchData1(LY.MES.WFCL.SRQZData.GetOrderSchData1Request request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetOrderSchData1", ReplyAction="http://tempuri.org/IQZDataService/GetOrderSchData1Response")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRQZData.GetOrderSchData1Response> GetOrderSchData1Async(LY.MES.WFCL.SRQZData.GetOrderSchData1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetPullCompute", ReplyAction="http://tempuri.org/IQZDataService/GetPullComputeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetPullComputeCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetPullCompute(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetPullCompute", ReplyAction="http://tempuri.org/IQZDataService/GetPullComputeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPullComputeAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetCraftsTable", ReplyAction="http://tempuri.org/IQZDataService/GetCraftsTableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetCraftsTableCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetCraftsTable(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetCraftsTable", ReplyAction="http://tempuri.org/IQZDataService/GetCraftsTableResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCraftsTableAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZRFIDCodeData", ReplyAction="http://tempuri.org/IQZDataService/GetQZRFIDCodeDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZRFIDCodeDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZRFIDCodeData(string sessionId, string RFIDCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZRFIDCodeData", ReplyAction="http://tempuri.org/IQZDataService/GetQZRFIDCodeDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZRFIDCodeDataAsync(string sessionId, string RFIDCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetNewQZRFIDCodeData", ReplyAction="http://tempuri.org/IQZDataService/GetNewQZRFIDCodeDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetNewQZRFIDCodeDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetNewQZRFIDCodeData(string sessionId, string RFIDCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetNewQZRFIDCodeData", ReplyAction="http://tempuri.org/IQZDataService/GetNewQZRFIDCodeDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetNewQZRFIDCodeDataAsync(string sessionId, string RFIDCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZZGData", ReplyAction="http://tempuri.org/IQZDataService/GetQZZGDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZZGDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZZGData(string sessionId, System.DateTime SysTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZZGData", ReplyAction="http://tempuri.org/IQZDataService/GetQZZGDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZZGDataAsync(string sessionId, System.DateTime SysTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZWeight", ReplyAction="http://tempuri.org/IQZDataService/GetQZWeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZWeightCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZWeight(string sessionId, System.DateTime StartTime, System.DateTime EndTime, string VarietyName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZWeight", ReplyAction="http://tempuri.org/IQZDataService/GetQZWeightResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZWeightAsync(string sessionId, System.DateTime StartTime, System.DateTime EndTime, string VarietyName, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetRFIDWeight", ReplyAction="http://tempuri.org/IQZDataService/GetRFIDWeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetRFIDWeightCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetRFIDWeight(string sessionId, string FormulaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetRFIDWeight", ReplyAction="http://tempuri.org/IQZDataService/GetRFIDWeightResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRFIDWeightAsync(string sessionId, string FormulaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetZGStatus", ReplyAction="http://tempuri.org/IQZDataService/GetZGStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetZGStatusCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetZGStatus(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetZGStatus", ReplyAction="http://tempuri.org/IQZDataService/GetZGStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetZGStatusAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetColorData", ReplyAction="http://tempuri.org/IQZDataService/GetColorDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetColorDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetColorData(string sessionId, string FormulaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetColorData", ReplyAction="http://tempuri.org/IQZDataService/GetColorDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetColorDataAsync(string sessionId, string FormulaCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZFunColor", ReplyAction="http://tempuri.org/IQZDataService/GetQZFunColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZFunColorCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZFunColor(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZFunColor", ReplyAction="http://tempuri.org/IQZDataService/GetQZFunColorResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZFunColorAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetRFIDData", ReplyAction="http://tempuri.org/IQZDataService/GetRFIDDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetRFIDDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetRFIDData(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetRFIDData", ReplyAction="http://tempuri.org/IQZDataService/GetRFIDDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRFIDDataAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetNullZGColor", ReplyAction="http://tempuri.org/IQZDataService/GetNullZGColorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetNullZGColorCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetNullZGColor(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetNullZGColor", ReplyAction="http://tempuri.org/IQZDataService/GetNullZGColorResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetNullZGColorAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetL4Data1", ReplyAction="http://tempuri.org/IQZDataService/GetL4Data1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetL4Data1CustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetL4Data1(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetL4Data1", ReplyAction="http://tempuri.org/IQZDataService/GetL4Data1Response")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetL4Data1Async(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetL5Data1", ReplyAction="http://tempuri.org/IQZDataService/GetL5Data1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetL5Data1CustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetL5Data1(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetL5Data1", ReplyAction="http://tempuri.org/IQZDataService/GetL5Data1Response")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetL5Data1Async(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/UpdateRFIDStatus", ReplyAction="http://tempuri.org/IQZDataService/UpdateRFIDStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/UpdateRFIDStatusCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRQZData.sj_line))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage))]
        object UpdateRFIDStatus(string sessionId, string RFIDNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/UpdateRFIDStatus", ReplyAction="http://tempuri.org/IQZDataService/UpdateRFIDStatusResponse")]
        System.Threading.Tasks.Task<object> UpdateRFIDStatusAsync(string sessionId, string RFIDNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZPcDataByJH", ReplyAction="http://tempuri.org/IQZDataService/GetQZPcDataByJHResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZPcDataByJHCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZPcDataByJH(string sessionId, string JiHao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZPcDataByJH", ReplyAction="http://tempuri.org/IQZDataService/GetQZPcDataByJHResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZPcDataByJHAsync(string sessionId, string JiHao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZPcDataByOrder", ReplyAction="http://tempuri.org/IQZDataService/GetQZPcDataByOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetQZPcDataByOrderCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetQZPcDataByOrder(string sessionId, string Order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetQZPcDataByOrder", ReplyAction="http://tempuri.org/IQZDataService/GetQZPcDataByOrderResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetQZPcDataByOrderAsync(string sessionId, string Order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetSJDataByJH", ReplyAction="http://tempuri.org/IQZDataService/GetSJDataByJHResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetSJDataByJHCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetSJDataByJH(string sessionId, string line);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetSJDataByJH", ReplyAction="http://tempuri.org/IQZDataService/GetSJDataByJHResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSJDataByJHAsync(string sessionId, string line);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/InsertSJData", ReplyAction="http://tempuri.org/IQZDataService/InsertSJDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/InsertSJDataCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRQZData.sj_line))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage))]
        object InsertSJData(string sessionId, LY.MES.WFCL.SRQZData.sj_line model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/InsertSJData", ReplyAction="http://tempuri.org/IQZDataService/InsertSJDataResponse")]
        System.Threading.Tasks.Task<object> InsertSJDataAsync(string sessionId, LY.MES.WFCL.SRQZData.sj_line model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetSJDataByPC", ReplyAction="http://tempuri.org/IQZDataService/GetSJDataByPCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRQZData.CustomFaultMessage), Action="http://tempuri.org/IQZDataService/GetSJDataByPCCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        System.Data.DataTable GetSJDataByPC(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQZDataService/GetSJDataByPC", ReplyAction="http://tempuri.org/IQZDataService/GetSJDataByPCResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSJDataByPCAsync(string sessionId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderSchData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderSchDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Data.DataTable dtFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int CurrPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int iTotalNum;
        
        public GetOrderSchDataRequest() {
        }
        
        public GetOrderSchDataRequest(string sessionId, System.Data.DataTable dtFilter, int PageSize, int CurrPage, int iTotalNum) {
            this.sessionId = sessionId;
            this.dtFilter = dtFilter;
            this.PageSize = PageSize;
            this.CurrPage = CurrPage;
            this.iTotalNum = iTotalNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderSchDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderSchDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataTable GetOrderSchDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iTotalNum;
        
        public GetOrderSchDataResponse() {
        }
        
        public GetOrderSchDataResponse(System.Data.DataTable GetOrderSchDataResult, int iTotalNum) {
            this.GetOrderSchDataResult = GetOrderSchDataResult;
            this.iTotalNum = iTotalNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderSchData1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderSchData1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int PageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int CurrPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int iTotalNum;
        
        public GetOrderSchData1Request() {
        }
        
        public GetOrderSchData1Request(string sessionId, int PageSize, int CurrPage, int iTotalNum) {
            this.sessionId = sessionId;
            this.PageSize = PageSize;
            this.CurrPage = CurrPage;
            this.iTotalNum = iTotalNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderSchData1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderSchData1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int iTotalNum;
        
        public GetOrderSchData1Response() {
        }
        
        public GetOrderSchData1Response(int iTotalNum) {
            this.iTotalNum = iTotalNum;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQZDataServiceChannel : LY.MES.WFCL.SRQZData.IQZDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QZDataServiceClient : System.ServiceModel.ClientBase<LY.MES.WFCL.SRQZData.IQZDataService>, LY.MES.WFCL.SRQZData.IQZDataService {
        
        public QZDataServiceClient() {
        }
        
        public QZDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QZDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QZDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QZDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetQualityInspector(string sessionId) {
            return base.Channel.GetQualityInspector(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQualityInspectorAsync(string sessionId) {
            return base.Channel.GetQualityInspectorAsync(sessionId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LY.MES.WFCL.SRQZData.GetOrderSchDataResponse LY.MES.WFCL.SRQZData.IQZDataService.GetOrderSchData(LY.MES.WFCL.SRQZData.GetOrderSchDataRequest request) {
            return base.Channel.GetOrderSchData(request);
        }
        
        public System.Data.DataTable GetOrderSchData(string sessionId, System.Data.DataTable dtFilter, int PageSize, int CurrPage, ref int iTotalNum) {
            LY.MES.WFCL.SRQZData.GetOrderSchDataRequest inValue = new LY.MES.WFCL.SRQZData.GetOrderSchDataRequest();
            inValue.sessionId = sessionId;
            inValue.dtFilter = dtFilter;
            inValue.PageSize = PageSize;
            inValue.CurrPage = CurrPage;
            inValue.iTotalNum = iTotalNum;
            LY.MES.WFCL.SRQZData.GetOrderSchDataResponse retVal = ((LY.MES.WFCL.SRQZData.IQZDataService)(this)).GetOrderSchData(inValue);
            iTotalNum = retVal.iTotalNum;
            return retVal.GetOrderSchDataResult;
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRQZData.GetOrderSchDataResponse> GetOrderSchDataAsync(LY.MES.WFCL.SRQZData.GetOrderSchDataRequest request) {
            return base.Channel.GetOrderSchDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LY.MES.WFCL.SRQZData.GetOrderSchData1Response LY.MES.WFCL.SRQZData.IQZDataService.GetOrderSchData1(LY.MES.WFCL.SRQZData.GetOrderSchData1Request request) {
            return base.Channel.GetOrderSchData1(request);
        }
        
        public void GetOrderSchData1(string sessionId, int PageSize, int CurrPage, ref int iTotalNum) {
            LY.MES.WFCL.SRQZData.GetOrderSchData1Request inValue = new LY.MES.WFCL.SRQZData.GetOrderSchData1Request();
            inValue.sessionId = sessionId;
            inValue.PageSize = PageSize;
            inValue.CurrPage = CurrPage;
            inValue.iTotalNum = iTotalNum;
            LY.MES.WFCL.SRQZData.GetOrderSchData1Response retVal = ((LY.MES.WFCL.SRQZData.IQZDataService)(this)).GetOrderSchData1(inValue);
            iTotalNum = retVal.iTotalNum;
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRQZData.GetOrderSchData1Response> GetOrderSchData1Async(LY.MES.WFCL.SRQZData.GetOrderSchData1Request request) {
            return base.Channel.GetOrderSchData1Async(request);
        }
        
        public System.Data.DataTable GetPullCompute(string sessionId) {
            return base.Channel.GetPullCompute(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPullComputeAsync(string sessionId) {
            return base.Channel.GetPullComputeAsync(sessionId);
        }
        
        public System.Data.DataTable GetCraftsTable(string sessionId) {
            return base.Channel.GetCraftsTable(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCraftsTableAsync(string sessionId) {
            return base.Channel.GetCraftsTableAsync(sessionId);
        }
        
        public System.Data.DataTable GetQZRFIDCodeData(string sessionId, string RFIDCode) {
            return base.Channel.GetQZRFIDCodeData(sessionId, RFIDCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZRFIDCodeDataAsync(string sessionId, string RFIDCode) {
            return base.Channel.GetQZRFIDCodeDataAsync(sessionId, RFIDCode);
        }
        
        public System.Data.DataTable GetNewQZRFIDCodeData(string sessionId, string RFIDCode) {
            return base.Channel.GetNewQZRFIDCodeData(sessionId, RFIDCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetNewQZRFIDCodeDataAsync(string sessionId, string RFIDCode) {
            return base.Channel.GetNewQZRFIDCodeDataAsync(sessionId, RFIDCode);
        }
        
        public System.Data.DataTable GetQZZGData(string sessionId, System.DateTime SysTime) {
            return base.Channel.GetQZZGData(sessionId, SysTime);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZZGDataAsync(string sessionId, System.DateTime SysTime) {
            return base.Channel.GetQZZGDataAsync(sessionId, SysTime);
        }
        
        public System.Data.DataTable GetQZWeight(string sessionId, System.DateTime StartTime, System.DateTime EndTime, string VarietyName, string Type) {
            return base.Channel.GetQZWeight(sessionId, StartTime, EndTime, VarietyName, Type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZWeightAsync(string sessionId, System.DateTime StartTime, System.DateTime EndTime, string VarietyName, string Type) {
            return base.Channel.GetQZWeightAsync(sessionId, StartTime, EndTime, VarietyName, Type);
        }
        
        public System.Data.DataTable GetRFIDWeight(string sessionId, string FormulaCode) {
            return base.Channel.GetRFIDWeight(sessionId, FormulaCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRFIDWeightAsync(string sessionId, string FormulaCode) {
            return base.Channel.GetRFIDWeightAsync(sessionId, FormulaCode);
        }
        
        public System.Data.DataTable GetZGStatus(string sessionId) {
            return base.Channel.GetZGStatus(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetZGStatusAsync(string sessionId) {
            return base.Channel.GetZGStatusAsync(sessionId);
        }
        
        public System.Data.DataTable GetColorData(string sessionId, string FormulaCode) {
            return base.Channel.GetColorData(sessionId, FormulaCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetColorDataAsync(string sessionId, string FormulaCode) {
            return base.Channel.GetColorDataAsync(sessionId, FormulaCode);
        }
        
        public System.Data.DataTable GetQZFunColor(string sessionId) {
            return base.Channel.GetQZFunColor(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZFunColorAsync(string sessionId) {
            return base.Channel.GetQZFunColorAsync(sessionId);
        }
        
        public System.Data.DataTable GetRFIDData(string sessionId) {
            return base.Channel.GetRFIDData(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRFIDDataAsync(string sessionId) {
            return base.Channel.GetRFIDDataAsync(sessionId);
        }
        
        public System.Data.DataTable GetNullZGColor(string sessionId) {
            return base.Channel.GetNullZGColor(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetNullZGColorAsync(string sessionId) {
            return base.Channel.GetNullZGColorAsync(sessionId);
        }
        
        public System.Data.DataTable GetL4Data1(string sessionId) {
            return base.Channel.GetL4Data1(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetL4Data1Async(string sessionId) {
            return base.Channel.GetL4Data1Async(sessionId);
        }
        
        public System.Data.DataTable GetL5Data1(string sessionId) {
            return base.Channel.GetL5Data1(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetL5Data1Async(string sessionId) {
            return base.Channel.GetL5Data1Async(sessionId);
        }
        
        public object UpdateRFIDStatus(string sessionId, string RFIDNum) {
            return base.Channel.UpdateRFIDStatus(sessionId, RFIDNum);
        }
        
        public System.Threading.Tasks.Task<object> UpdateRFIDStatusAsync(string sessionId, string RFIDNum) {
            return base.Channel.UpdateRFIDStatusAsync(sessionId, RFIDNum);
        }
        
        public System.Data.DataTable GetQZPcDataByJH(string sessionId, string JiHao) {
            return base.Channel.GetQZPcDataByJH(sessionId, JiHao);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZPcDataByJHAsync(string sessionId, string JiHao) {
            return base.Channel.GetQZPcDataByJHAsync(sessionId, JiHao);
        }
        
        public System.Data.DataTable GetQZPcDataByOrder(string sessionId, string Order) {
            return base.Channel.GetQZPcDataByOrder(sessionId, Order);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetQZPcDataByOrderAsync(string sessionId, string Order) {
            return base.Channel.GetQZPcDataByOrderAsync(sessionId, Order);
        }
        
        public System.Data.DataTable GetSJDataByJH(string sessionId, string line) {
            return base.Channel.GetSJDataByJH(sessionId, line);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSJDataByJHAsync(string sessionId, string line) {
            return base.Channel.GetSJDataByJHAsync(sessionId, line);
        }
        
        public object InsertSJData(string sessionId, LY.MES.WFCL.SRQZData.sj_line model) {
            return base.Channel.InsertSJData(sessionId, model);
        }
        
        public System.Threading.Tasks.Task<object> InsertSJDataAsync(string sessionId, LY.MES.WFCL.SRQZData.sj_line model) {
            return base.Channel.InsertSJDataAsync(sessionId, model);
        }
        
        public System.Data.DataTable GetSJDataByPC(string sessionId) {
            return base.Channel.GetSJDataByPC(sessionId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSJDataByPCAsync(string sessionId) {
            return base.Channel.GetSJDataByPCAsync(sessionId);
        }
    }
}
