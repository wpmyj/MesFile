//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LY.MES.WFCL.SRExcute {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonResultOfArrayOfDeviceExecutedYMi5huk", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CommonResultOfArrayOfDeviceExecutedYMi5huk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LY.MES.WFCL.SRExcute.DeviceExecute[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LY.MES.WFCL.SRExcute.DeviceExecute[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNum {
            get {
                return this.TotalNumField;
            }
            set {
                if ((this.TotalNumField.Equals(value) != true)) {
                    this.TotalNumField = value;
                    this.RaisePropertyChanged("TotalNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceExecute", Namespace="http://schemas.datacontract.org/2004/07/LY.MES.Model")]
    [System.SerializableAttribute()]
    public partial class DeviceExecute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CollFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeveCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CollFrequency {
            get {
                return this.CollFrequencyField;
            }
            set {
                if ((this.CollFrequencyField.Equals(value) != true)) {
                    this.CollFrequencyField = value;
                    this.RaisePropertyChanged("CollFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatePerson {
            get {
                return this.CreatePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatePersonField, value) != true)) {
                    this.CreatePersonField = value;
                    this.RaisePropertyChanged("CreatePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevCode {
            get {
                return this.DevCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DevCodeField, value) != true)) {
                    this.DevCodeField = value;
                    this.RaisePropertyChanged("DevCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeveCode {
            get {
                return this.DeveCodeField;
            }
            set {
                if ((this.DeveCodeField.Equals(value) != true)) {
                    this.DeveCodeField = value;
                    this.RaisePropertyChanged("DeveCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviCode {
            get {
                return this.DeviCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviCodeField, value) != true)) {
                    this.DeviCodeField = value;
                    this.RaisePropertyChanged("DeviCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevpCode {
            get {
                return this.DevpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DevpCodeField, value) != true)) {
                    this.DevpCodeField = value;
                    this.RaisePropertyChanged("DevpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDate {
            get {
                return this.LastDateField;
            }
            set {
                if ((this.LastDateField.Equals(value) != true)) {
                    this.LastDateField = value;
                    this.RaisePropertyChanged("LastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPerson {
            get {
                return this.LastPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPersonField, value) != true)) {
                    this.LastPersonField = value;
                    this.RaisePropertyChanged("LastPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserStatus {
            get {
                return this.UserStatusField;
            }
            set {
                if ((this.UserStatusField.Equals(value) != true)) {
                    this.UserStatusField = value;
                    this.RaisePropertyChanged("UserStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CustomFaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonResultOfArrayOfV_DV_DevExecutedYMi5huk", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CommonResultOfArrayOfV_DV_DevExecutedYMi5huk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LY.MES.WFCL.SRExcute.V_DV_DevExecute[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LY.MES.WFCL.SRExcute.V_DV_DevExecute[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNum {
            get {
                return this.TotalNumField;
            }
            set {
                if ((this.TotalNumField.Equals(value) != true)) {
                    this.TotalNumField = value;
                    this.RaisePropertyChanged("TotalNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="V_DV_DevExecute", Namespace="http://schemas.datacontract.org/2004/07/LY.MES.Model")]
    [System.SerializableAttribute()]
    public partial class V_DV_DevExecute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaudRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckBitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CollFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConAccAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConvertTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataBitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevStdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DevpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecuteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InterFaceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StandardValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StopBitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZGCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZGNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaudRate {
            get {
                return this.BaudRateField;
            }
            set {
                if ((object.ReferenceEquals(this.BaudRateField, value) != true)) {
                    this.BaudRateField = value;
                    this.RaisePropertyChanged("BaudRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CallID {
            get {
                return this.CallIDField;
            }
            set {
                if ((this.CallIDField.Equals(value) != true)) {
                    this.CallIDField = value;
                    this.RaisePropertyChanged("CallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckBit {
            get {
                return this.CheckBitField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckBitField, value) != true)) {
                    this.CheckBitField = value;
                    this.RaisePropertyChanged("CheckBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CollFrequency {
            get {
                return this.CollFrequencyField;
            }
            set {
                if ((this.CollFrequencyField.Equals(value) != true)) {
                    this.CollFrequencyField = value;
                    this.RaisePropertyChanged("CollFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConAccAddress {
            get {
                return this.ConAccAddressField;
            }
            set {
                if ((this.ConAccAddressField.Equals(value) != true)) {
                    this.ConAccAddressField = value;
                    this.RaisePropertyChanged("ConAccAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConvertType {
            get {
                return this.ConvertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvertTypeField, value) != true)) {
                    this.ConvertTypeField = value;
                    this.RaisePropertyChanged("ConvertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataBit {
            get {
                return this.DataBitField;
            }
            set {
                if ((object.ReferenceEquals(this.DataBitField, value) != true)) {
                    this.DataBitField = value;
                    this.RaisePropertyChanged("DataBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevCode {
            get {
                return this.DevCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DevCodeField, value) != true)) {
                    this.DevCodeField = value;
                    this.RaisePropertyChanged("DevCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevName {
            get {
                return this.DevNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevNameField, value) != true)) {
                    this.DevNameField = value;
                    this.RaisePropertyChanged("DevName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevStd {
            get {
                return this.DevStdField;
            }
            set {
                if ((object.ReferenceEquals(this.DevStdField, value) != true)) {
                    this.DevStdField = value;
                    this.RaisePropertyChanged("DevStd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviCode {
            get {
                return this.DeviCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviCodeField, value) != true)) {
                    this.DeviCodeField = value;
                    this.RaisePropertyChanged("DeviCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviName {
            get {
                return this.DeviNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviNameField, value) != true)) {
                    this.DeviNameField = value;
                    this.RaisePropertyChanged("DeviName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DevpAddress {
            get {
                return this.DevpAddressField;
            }
            set {
                if ((this.DevpAddressField.Equals(value) != true)) {
                    this.DevpAddressField = value;
                    this.RaisePropertyChanged("DevpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevpCode {
            get {
                return this.DevpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DevpCodeField, value) != true)) {
                    this.DevpCodeField = value;
                    this.RaisePropertyChanged("DevpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevpName {
            get {
                return this.DevpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DevpNameField, value) != true)) {
                    this.DevpNameField = value;
                    this.RaisePropertyChanged("DevpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipStatus {
            get {
                return this.EquipStatusField;
            }
            set {
                if ((this.EquipStatusField.Equals(value) != true)) {
                    this.EquipStatusField = value;
                    this.RaisePropertyChanged("EquipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecuteID {
            get {
                return this.ExecuteIDField;
            }
            set {
                if ((this.ExecuteIDField.Equals(value) != true)) {
                    this.ExecuteIDField = value;
                    this.RaisePropertyChanged("ExecuteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPUrl {
            get {
                return this.IPUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.IPUrlField, value) != true)) {
                    this.IPUrlField = value;
                    this.RaisePropertyChanged("IPUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InterFaceStatus {
            get {
                return this.InterFaceStatusField;
            }
            set {
                if ((this.InterFaceStatusField.Equals(value) != true)) {
                    this.InterFaceStatusField = value;
                    this.RaisePropertyChanged("InterFaceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAddress {
            get {
                return this.LocalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAddressField, value) != true)) {
                    this.LocalAddressField = value;
                    this.RaisePropertyChanged("LocalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendFormat {
            get {
                return this.SendFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SendFormatField, value) != true)) {
                    this.SendFormatField = value;
                    this.RaisePropertyChanged("SendFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialPort {
            get {
                return this.SerialPortField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialPortField, value) != true)) {
                    this.SerialPortField = value;
                    this.RaisePropertyChanged("SerialPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StandardValue {
            get {
                return this.StandardValueField;
            }
            set {
                if ((this.StandardValueField.Equals(value) != true)) {
                    this.StandardValueField = value;
                    this.RaisePropertyChanged("StandardValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StopBit {
            get {
                return this.StopBitField;
            }
            set {
                if ((object.ReferenceEquals(this.StopBitField, value) != true)) {
                    this.StopBitField = value;
                    this.RaisePropertyChanged("StopBit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkStatus {
            get {
                return this.WorkStatusField;
            }
            set {
                if ((this.WorkStatusField.Equals(value) != true)) {
                    this.WorkStatusField = value;
                    this.RaisePropertyChanged("WorkStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZGCode {
            get {
                return this.ZGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZGCodeField, value) != true)) {
                    this.ZGCodeField = value;
                    this.RaisePropertyChanged("ZGCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZGName {
            get {
                return this.ZGNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ZGNameField, value) != true)) {
                    this.ZGNameField = value;
                    this.RaisePropertyChanged("ZGName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonResultOfV_DV_DevExecutedYMi5huk", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CommonResultOfV_DV_DevExecutedYMi5huk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LY.MES.WFCL.SRExcute.V_DV_DevExecute DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LY.MES.WFCL.SRExcute.V_DV_DevExecute Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNum {
            get {
                return this.TotalNumField;
            }
            set {
                if ((this.TotalNumField.Equals(value) != true)) {
                    this.TotalNumField = value;
                    this.RaisePropertyChanged("TotalNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonResultOfDeviceExecutedYMi5huk", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
    [System.SerializableAttribute()]
    public partial class CommonResultOfDeviceExecutedYMi5huk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LY.MES.WFCL.SRExcute.DeviceExecute DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LY.MES.WFCL.SRExcute.DeviceExecute Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNum {
            get {
                return this.TotalNumField;
            }
            set {
                if ((this.TotalNumField.Equals(value) != true)) {
                    this.TotalNumField = value;
                    this.RaisePropertyChanged("TotalNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SRExcute.IDevExecuteService")]
    public interface IDevExecuteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/DoWork", ReplyAction="http://tempuri.org/IDevExecuteService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/DoWork", ReplyAction="http://tempuri.org/IDevExecuteService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteListCustomFaultMessageFault" +
            "", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk GetDeviceExecuteList(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteListResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk> GetDeviceExecuteListAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewList(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListByAddress", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListByAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListByAddressCustomFaultMessageFa" +
            "ult", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewListByAddress(string sessionId, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListByAddress", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListByAddressResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListByAddressAsync(string sessionId, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListByZGName", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListByZGNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListByZGNameCustomFaultMessageFau" +
            "lt", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewListByZGName(string sessionId, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListByZGName", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListByZGNameResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListByZGNameAsync(string sessionId, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllAddress", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllAddressCustomFaultMessageF" +
            "ault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        string[] GetDevViewListAllAddress(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllAddress", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllAddressResponse")]
        System.Threading.Tasks.Task<string[]> GetDevViewListAllAddressAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllDevName", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllDevNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllDevNameCustomFaultMessageF" +
            "ault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        string[] GetDevViewListAllDevName(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllDevName", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllDevNameResponse")]
        System.Threading.Tasks.Task<string[]> GetDevViewListAllDevNameAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllIP", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllIPResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllIPCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Tuple<string, object[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.DeviceExecute[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.DeviceExecute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.V_DV_DevExecute[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.V_DV_DevExecute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.Utility.SRSysBase.CommonResultOfboolean))]
        object[] GetDevViewListAllIP(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevViewListAllIP", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevViewListAllIPResponse")]
        System.Threading.Tasks.Task<object[]> GetDevViewListAllIPAsync(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByID", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByIDCustomFaultMessageFault" +
            "", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk GetDeviceExecuteByID(string sessionId, int strExctueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByID", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByIDResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk> GetDeviceExecuteByIDAsync(string sessionId, int strExctueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByDevCode", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByDevCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByDevCodeCustomFaultMessage" +
            "Fault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDeviceExecuteByDevCode(string sessionId, string strDevCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByDevCode", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteByDevCodeResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDeviceExecuteByDevCodeAsync(string sessionId, string strDevCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDeviceExecuteCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk GetDeviceExecute(string sessionId, string strDeviCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/GetDeviceExecuteResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> GetDeviceExecuteAsync(string sessionId, string strDeviCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/AddDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/AddDeviceExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/AddDeviceExecuteCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk AddDeviceExecute(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/AddDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/AddDeviceExecuteResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> AddDeviceExecuteAsync(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/UpdateDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/UpdateDeviceExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/UpdateDeviceExecuteCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk UpdateDeviceExecute(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/UpdateDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/UpdateDeviceExecuteResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> UpdateDeviceExecuteAsync(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/DelDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/DelDeviceExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/DelDeviceExecuteCustomFaultMessageFault", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        Client.Utility.SRSysBase.CommonResultOfboolean DelDeviceExecute(string sessionId, int StrDeveCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/DelDeviceExecute", ReplyAction="http://tempuri.org/IDevExecuteService/DelDeviceExecuteResponse")]
        System.Threading.Tasks.Task<Client.Utility.SRSysBase.CommonResultOfboolean> DelDeviceExecuteAsync(string sessionId, int StrDeveCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevExecutePagedList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevExecutePagedListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetDevExecutePagedListCustomFaultMessageFau" +
            "lt", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.DeviceExecute[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.DeviceExecute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.V_DV_DevExecute[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.V_DV_DevExecute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Client.Utility.SRSysBase.CommonResultOfboolean))]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk GetDevExecutePagedList(string sessionId, System.Tuple<string, object[]> tWhere, int PageSize, int CurrPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetDevExecutePagedList", ReplyAction="http://tempuri.org/IDevExecuteService/GetDevExecutePagedListResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk> GetDevExecutePagedListAsync(string sessionId, System.Tuple<string, object[]> tWhere, int PageSize, int CurrPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByDeviName", ReplyAction="http://tempuri.org/IDevExecuteService/GetViewExecIDByDeviNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByDeviNameCustomFaultMessageFa" +
            "ult", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetViewExecIDByDeviName(string sessionId, string JiHao, string IrconTroughName, string Serial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByDeviName", ReplyAction="http://tempuri.org/IDevExecuteService/GetViewExecIDByDeviNameResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetViewExecIDByDeviNameAsync(string sessionId, string JiHao, string IrconTroughName, string Serial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByIrcon", ReplyAction="http://tempuri.org/IDevExecuteService/GetViewExecIDByIrconResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LY.MES.WFCL.SRExcute.CustomFaultMessage), Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByIrconCustomFaultMessageFault" +
            "", Name="CustomFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Server.Utility")]
        LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetViewExecIDByIrcon(string sessionId, string JiHao, string IrconTroughName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDevExecuteService/GetViewExecIDByIrcon", ReplyAction="http://tempuri.org/IDevExecuteService/GetViewExecIDByIrconResponse")]
        System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetViewExecIDByIrconAsync(string sessionId, string JiHao, string IrconTroughName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDevExecuteServiceChannel : LY.MES.WFCL.SRExcute.IDevExecuteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DevExecuteServiceClient : System.ServiceModel.ClientBase<LY.MES.WFCL.SRExcute.IDevExecuteService>, LY.MES.WFCL.SRExcute.IDevExecuteService {
        
        public DevExecuteServiceClient() {
        }
        
        public DevExecuteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DevExecuteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DevExecuteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DevExecuteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk GetDeviceExecuteList(string sessionId) {
            return base.Channel.GetDeviceExecuteList(sessionId);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk> GetDeviceExecuteListAsync(string sessionId) {
            return base.Channel.GetDeviceExecuteListAsync(sessionId);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewList(string sessionId) {
            return base.Channel.GetDevViewList(sessionId);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListAsync(string sessionId) {
            return base.Channel.GetDevViewListAsync(sessionId);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewListByAddress(string sessionId, string Address) {
            return base.Channel.GetDevViewListByAddress(sessionId, Address);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListByAddressAsync(string sessionId, string Address) {
            return base.Channel.GetDevViewListByAddressAsync(sessionId, Address);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDevViewListByZGName(string sessionId, string Address) {
            return base.Channel.GetDevViewListByZGName(sessionId, Address);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDevViewListByZGNameAsync(string sessionId, string Address) {
            return base.Channel.GetDevViewListByZGNameAsync(sessionId, Address);
        }
        
        public string[] GetDevViewListAllAddress(string sessionId) {
            return base.Channel.GetDevViewListAllAddress(sessionId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDevViewListAllAddressAsync(string sessionId) {
            return base.Channel.GetDevViewListAllAddressAsync(sessionId);
        }
        
        public string[] GetDevViewListAllDevName(string sessionId) {
            return base.Channel.GetDevViewListAllDevName(sessionId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDevViewListAllDevNameAsync(string sessionId) {
            return base.Channel.GetDevViewListAllDevNameAsync(sessionId);
        }
        
        public object[] GetDevViewListAllIP(string sessionId) {
            return base.Channel.GetDevViewListAllIP(sessionId);
        }
        
        public System.Threading.Tasks.Task<object[]> GetDevViewListAllIPAsync(string sessionId) {
            return base.Channel.GetDevViewListAllIPAsync(sessionId);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk GetDeviceExecuteByID(string sessionId, int strExctueID) {
            return base.Channel.GetDeviceExecuteByID(sessionId, strExctueID);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfV_DV_DevExecutedYMi5huk> GetDeviceExecuteByIDAsync(string sessionId, int strExctueID) {
            return base.Channel.GetDeviceExecuteByIDAsync(sessionId, strExctueID);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetDeviceExecuteByDevCode(string sessionId, string strDevCode) {
            return base.Channel.GetDeviceExecuteByDevCode(sessionId, strDevCode);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetDeviceExecuteByDevCodeAsync(string sessionId, string strDevCode) {
            return base.Channel.GetDeviceExecuteByDevCodeAsync(sessionId, strDevCode);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk GetDeviceExecute(string sessionId, string strDeviCode) {
            return base.Channel.GetDeviceExecute(sessionId, strDeviCode);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> GetDeviceExecuteAsync(string sessionId, string strDeviCode) {
            return base.Channel.GetDeviceExecuteAsync(sessionId, strDeviCode);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk AddDeviceExecute(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model) {
            return base.Channel.AddDeviceExecute(sessionId, model);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> AddDeviceExecuteAsync(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model) {
            return base.Channel.AddDeviceExecuteAsync(sessionId, model);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk UpdateDeviceExecute(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model) {
            return base.Channel.UpdateDeviceExecute(sessionId, model);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfDeviceExecutedYMi5huk> UpdateDeviceExecuteAsync(string sessionId, LY.MES.WFCL.SRExcute.DeviceExecute model) {
            return base.Channel.UpdateDeviceExecuteAsync(sessionId, model);
        }
        
        public Client.Utility.SRSysBase.CommonResultOfboolean DelDeviceExecute(string sessionId, int StrDeveCode) {
            return base.Channel.DelDeviceExecute(sessionId, StrDeveCode);
        }
        
        public System.Threading.Tasks.Task<Client.Utility.SRSysBase.CommonResultOfboolean> DelDeviceExecuteAsync(string sessionId, int StrDeveCode) {
            return base.Channel.DelDeviceExecuteAsync(sessionId, StrDeveCode);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk GetDevExecutePagedList(string sessionId, System.Tuple<string, object[]> tWhere, int PageSize, int CurrPage) {
            return base.Channel.GetDevExecutePagedList(sessionId, tWhere, PageSize, CurrPage);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfDeviceExecutedYMi5huk> GetDevExecutePagedListAsync(string sessionId, System.Tuple<string, object[]> tWhere, int PageSize, int CurrPage) {
            return base.Channel.GetDevExecutePagedListAsync(sessionId, tWhere, PageSize, CurrPage);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetViewExecIDByDeviName(string sessionId, string JiHao, string IrconTroughName, string Serial) {
            return base.Channel.GetViewExecIDByDeviName(sessionId, JiHao, IrconTroughName, Serial);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetViewExecIDByDeviNameAsync(string sessionId, string JiHao, string IrconTroughName, string Serial) {
            return base.Channel.GetViewExecIDByDeviNameAsync(sessionId, JiHao, IrconTroughName, Serial);
        }
        
        public LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk GetViewExecIDByIrcon(string sessionId, string JiHao, string IrconTroughName) {
            return base.Channel.GetViewExecIDByIrcon(sessionId, JiHao, IrconTroughName);
        }
        
        public System.Threading.Tasks.Task<LY.MES.WFCL.SRExcute.CommonResultOfArrayOfV_DV_DevExecutedYMi5huk> GetViewExecIDByIrconAsync(string sessionId, string JiHao, string IrconTroughName) {
            return base.Channel.GetViewExecIDByIrconAsync(sessionId, JiHao, IrconTroughName);
        }
    }
}
